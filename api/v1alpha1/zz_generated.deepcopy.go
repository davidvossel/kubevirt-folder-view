//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/rbac/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFolder) DeepCopyInto(out *ClusterFolder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFolder.
func (in *ClusterFolder) DeepCopy() *ClusterFolder {
	if in == nil {
		return nil
	}
	out := new(ClusterFolder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterFolder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFolderEntry) DeepCopyInto(out *ClusterFolderEntry) {
	*out = *in
	if in.ChildFolders != nil {
		in, out := &in.ChildFolders, &out.ChildFolders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFolderEntry.
func (in *ClusterFolderEntry) DeepCopy() *ClusterFolderEntry {
	if in == nil {
		return nil
	}
	out := new(ClusterFolderEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFolderList) DeepCopyInto(out *ClusterFolderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterFolder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFolderList.
func (in *ClusterFolderList) DeepCopy() *ClusterFolderList {
	if in == nil {
		return nil
	}
	out := new(ClusterFolderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterFolderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFolderSpec) DeepCopyInto(out *ClusterFolderSpec) {
	*out = *in
	if in.ChildClusterFolders != nil {
		in, out := &in.ChildClusterFolders, &out.ChildClusterFolders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FolderPermissions != nil {
		in, out := &in.FolderPermissions, &out.FolderPermissions
		*out = make([]FolderPermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFolderSpec.
func (in *ClusterFolderSpec) DeepCopy() *ClusterFolderSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterFolderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFolderStatus) DeepCopyInto(out *ClusterFolderStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFolderStatus.
func (in *ClusterFolderStatus) DeepCopy() *ClusterFolderStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterFolderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderIndex) DeepCopyInto(out *FolderIndex) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderIndex.
func (in *FolderIndex) DeepCopy() *FolderIndex {
	if in == nil {
		return nil
	}
	out := new(FolderIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FolderIndex) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderIndexList) DeepCopyInto(out *FolderIndexList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FolderIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderIndexList.
func (in *FolderIndexList) DeepCopy() *FolderIndexList {
	if in == nil {
		return nil
	}
	out := new(FolderIndexList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FolderIndexList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderIndexSpec) DeepCopyInto(out *FolderIndexSpec) {
	*out = *in
	if in.ClusterFolderEntries != nil {
		in, out := &in.ClusterFolderEntries, &out.ClusterFolderEntries
		*out = make(map[string]ClusterFolderEntry, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.NamespacedFolderEntries != nil {
		in, out := &in.NamespacedFolderEntries, &out.NamespacedFolderEntries
		*out = make(map[string]NamespacedFolderEntry, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderIndexSpec.
func (in *FolderIndexSpec) DeepCopy() *FolderIndexSpec {
	if in == nil {
		return nil
	}
	out := new(FolderIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderIndexStatus) DeepCopyInto(out *FolderIndexStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderIndexStatus.
func (in *FolderIndexStatus) DeepCopy() *FolderIndexStatus {
	if in == nil {
		return nil
	}
	out := new(FolderIndexStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermission) DeepCopyInto(out *FolderPermission) {
	*out = *in
	out.Subject = in.Subject
	if in.RoleRefs != nil {
		in, out := &in.RoleRefs, &out.RoleRefs
		*out = make([]v1.RoleRef, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermission.
func (in *FolderPermission) DeepCopy() *FolderPermission {
	if in == nil {
		return nil
	}
	out := new(FolderPermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedFolder) DeepCopyInto(out *NamespacedFolder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedFolder.
func (in *NamespacedFolder) DeepCopy() *NamespacedFolder {
	if in == nil {
		return nil
	}
	out := new(NamespacedFolder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespacedFolder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedFolderEntry) DeepCopyInto(out *NamespacedFolderEntry) {
	*out = *in
	if in.ChildFolders != nil {
		in, out := &in.ChildFolders, &out.ChildFolders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VirtualMachines != nil {
		in, out := &in.VirtualMachines, &out.VirtualMachines
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedFolderEntry.
func (in *NamespacedFolderEntry) DeepCopy() *NamespacedFolderEntry {
	if in == nil {
		return nil
	}
	out := new(NamespacedFolderEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedFolderList) DeepCopyInto(out *NamespacedFolderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NamespacedFolder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedFolderList.
func (in *NamespacedFolderList) DeepCopy() *NamespacedFolderList {
	if in == nil {
		return nil
	}
	out := new(NamespacedFolderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespacedFolderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedFolderSpec) DeepCopyInto(out *NamespacedFolderSpec) {
	*out = *in
	if in.ChildNamespacedFolders != nil {
		in, out := &in.ChildNamespacedFolders, &out.ChildNamespacedFolders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VirtualMachines != nil {
		in, out := &in.VirtualMachines, &out.VirtualMachines
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FolderPermissions != nil {
		in, out := &in.FolderPermissions, &out.FolderPermissions
		*out = make([]FolderPermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedFolderSpec.
func (in *NamespacedFolderSpec) DeepCopy() *NamespacedFolderSpec {
	if in == nil {
		return nil
	}
	out := new(NamespacedFolderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedFolderStatus) DeepCopyInto(out *NamespacedFolderStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedFolderStatus.
func (in *NamespacedFolderStatus) DeepCopy() *NamespacedFolderStatus {
	if in == nil {
		return nil
	}
	out := new(NamespacedFolderStatus)
	in.DeepCopyInto(out)
	return out
}
